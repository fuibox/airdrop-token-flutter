class AssetsModel {
  int? code;
  String? message;
  List<Asset>? data;

  AssetsModel({this.code, this.message, this.data});

  AssetsModel.fromJson(Map<String, dynamic> json) {
    code = json['code'];
    message = json['message'];
    if (json['data'] != null) {
      data = <Asset>[];
      json['data'].forEach((v) {
        data!.add(new Asset.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['code'] = this.code;
    data['message'] = this.message;
    if (this.data != null) {
      data['data'] = this.data!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Asset {
  int? assetId;
  String? amount;
  String? name;
  String? icon;
  String? home;
  String? introduction;
  String? totalSupply;
  String? maxSupply;
  String? withdrawLink;
  String? withdrawFee;
  bool? hasBind;
  Null? bindAddress;
  int? openWithdraw;
  int? openDeposit;
  String? minimumWithdraw;
  String? chainName;
  int? usdtValue;

  Asset(
      {this.assetId,
      this.amount,
      this.name,
      this.icon,
      this.home,
      this.introduction,
      this.totalSupply,
      this.maxSupply,
      this.withdrawLink,
      this.withdrawFee,
      this.hasBind,
      this.bindAddress,
      this.openWithdraw,
      this.openDeposit,
      this.minimumWithdraw,
      this.chainName,
      this.usdtValue});

  Asset.fromJson(Map<String, dynamic> json) {
    assetId = json['assetId'];
    amount = json['amount'].toString();
    name = json['name'];
    icon = json['icon'];
    home = json['home'];
    introduction = json['introduction'];
    totalSupply = json['totalSupply'];
    maxSupply = json['maxSupply'];
    withdrawLink = json['withdrawLink'];
    withdrawFee = json['withdrawFee'];
    hasBind = json['hasBind'];
    bindAddress = json['bindAddress'];
    openWithdraw = json['openWithdraw'];
    openDeposit = json['openDeposit'];
    minimumWithdraw = json['minimumWithdraw'];
    chainName = json['chainName'];
    usdtValue = json['usdtValue'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['assetId'] = this.assetId;
    data['amount'] = this.amount;
    data['name'] = this.name;
    data['icon'] = this.icon;
    data['home'] = this.home;
    data['introduction'] = this.introduction;
    data['totalSupply'] = this.totalSupply;
    data['maxSupply'] = this.maxSupply;
    data['withdrawLink'] = this.withdrawLink;
    data['withdrawFee'] = this.withdrawFee;
    data['hasBind'] = this.hasBind;
    data['bindAddress'] = this.bindAddress;
    data['openWithdraw'] = this.openWithdraw;
    data['openDeposit'] = this.openDeposit;
    data['minimumWithdraw'] = this.minimumWithdraw;
    data['chainName'] = this.chainName;
    data['usdtValue'] = this.usdtValue;
    return data;
  }
}

class Autogenerated {
  int? code;
  String? message;
  List<Data>? data;

  Autogenerated({this.code, this.message, this.data});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    code = json['code'];
    message = json['message'];
    if (json['data'] != null) {
      data = <Data>[];
      json['data'].forEach((v) {
        data!.add(new Data.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['code'] = this.code;
    data['message'] = this.message;
    if (this.data != null) {
      data['data'] = this.data!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Data {
  int? assetId;
  String? amount;
  String? name;
  String? icon;
  String? home;
  String? introduction;
  String? totalSupply;
  String? maxSupply;
  String? withdrawLink;
  String? withdrawFee;
  bool? hasBind;
  Null? bindAddress;
  int? openWithdraw;
  int? openDeposit;
  String? minimumWithdraw;
  String? chainName;
  int? usdtValue;

  Data(
      {this.assetId,
      this.amount,
      this.name,
      this.icon,
      this.home,
      this.introduction,
      this.totalSupply,
      this.maxSupply,
      this.withdrawLink,
      this.withdrawFee,
      this.hasBind,
      this.bindAddress,
      this.openWithdraw,
      this.openDeposit,
      this.minimumWithdraw,
      this.chainName,
      this.usdtValue});

  Data.fromJson(Map<String, dynamic> json) {
    assetId = json['assetId'];
    amount = json['amount'];
    name = json['name'];
    icon = json['icon'];
    home = json['home'];
    introduction = json['introduction'];
    totalSupply = json['totalSupply'];
    maxSupply = json['maxSupply'];
    withdrawLink = json['withdrawLink'];
    withdrawFee = json['withdrawFee'];
    hasBind = json['hasBind'];
    bindAddress = json['bindAddress'];
    openWithdraw = json['openWithdraw'];
    openDeposit = json['openDeposit'];
    minimumWithdraw = json['minimumWithdraw'];
    chainName = json['chainName'];
    usdtValue = json['usdtValue'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['assetId'] = this.assetId;
    data['amount'] = this.amount;
    data['name'] = this.name;
    data['icon'] = this.icon;
    data['home'] = this.home;
    data['introduction'] = this.introduction;
    data['totalSupply'] = this.totalSupply;
    data['maxSupply'] = this.maxSupply;
    data['withdrawLink'] = this.withdrawLink;
    data['withdrawFee'] = this.withdrawFee;
    data['hasBind'] = this.hasBind;
    data['bindAddress'] = this.bindAddress;
    data['openWithdraw'] = this.openWithdraw;
    data['openDeposit'] = this.openDeposit;
    data['minimumWithdraw'] = this.minimumWithdraw;
    data['chainName'] = this.chainName;
    data['usdtValue'] = this.usdtValue;
    return data;
  }
}
